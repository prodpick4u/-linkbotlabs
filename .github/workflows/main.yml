name: üõ†Ô∏è Generate Blog with Apify

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2:00 AM UTC

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      APIFY_TOKEN: ${{ secrets.APIFY_TOKEN }}
      APIFY_ACTOR_ID: ${{ secrets.APIFY_ACTOR_ID }}
      AFFILIATE_TAG: ${{ secrets.AFFILIATE_TAG }}

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v3

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîê Validate Secrets
        run: |
          if [ -z "$APIFY_TOKEN" ]; then
            echo "‚ùå APIFY_TOKEN is missing!"
            exit 1
          fi
          if [ -z "$APIFY_ACTOR_ID" ]; then
            echo "‚ùå APIFY_ACTOR_ID is missing!"
            exit 1
          fi
          if [ -z "$AFFILIATE_TAG" ]; then
            echo "‚ùå AFFILIATE_TAG is missing!"
            exit 1
          fi

      - name: üöÄ Run Apify Runner
        run: python apify_runner.py
        env:
          APIFY_TOKEN: ${{ secrets.APIFY_TOKEN }}
          APIFY_ACTOR_ID: ${{ secrets.APIFY_ACTOR_ID }}

      - name: üöÄ Run Blog Generator
        run: python main.py
        env:
          APIFY_TOKEN: ${{ secrets.APIFY_TOKEN }}
          APIFY_ACTOR_ID: ${{ secrets.APIFY_ACTOR_ID }}
          AFFILIATE_TAG: ${{ secrets.AFFILIATE_TAG }}

      - name: üßπ Cleanup rogue posts index file
        run: rm -f posts/index.html || true

      - name: üì§ Upload Generated Blog
        uses: actions/upload-artifact@v3
        with:
          name: blog-site
          path: docs/

      - name: üöÄ Commit & Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "Auto Bot"
          git config --global user.email "autobot@example.com"
          # Add only expected files to avoid committing rogue files
          git add docs/posts/*.html docs/index.html posts/*.md
          git commit -m "ü§ñ Auto-update blog" || echo "No changes to commit"
          git pull origin main --rebase || echo "No pull needed"
          git push origin main
